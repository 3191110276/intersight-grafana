apiVersion: grizzly.grafana.com/v1alpha1
kind: Dashboard
metadata:
    folder: is_domain_net_server
    name: is_domain_net_server_congestion
spec:
    annotations:
        list:
            - builtIn: 1
              datasource:
                type: grafana
                uid: -- Grafana --
              enable: true
              hide: true
              iconColor: rgba(0, 211, 255, 1)
              name: Annotations & Alerts
              target:
                limit: 100
                matchAny: false
                tags: []
                type: dashboard
              type: dashboard
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              enable: true
              hide: false
              iconColor: '#7fc2ce'
              mappings:
                id:
                    source: field
                    value: Moid
                tags:
                    source: field
                    value: Status
                text:
                    source: field
                    value: Email
                time:
                    source: field
                    value: CreateTime
                timeEnd:
                    source: field
                    value: EndTime
                title:
                    source: field
                    value: Name
              name: Server Actions
              target:
                columns:
                    - selector: Moid
                      text: Moid
                      type: string
                    - selector: CreateTime
                      text: CreateTime
                      type: timestamp
                    - selector: EndTime
                      text: EndTime
                      type: timestamp
                    - selector: Name
                      text: Name
                      type: string
                    - selector: Status
                      text: Status
                      type: string
                    - selector: Email
                      text: Email
                      type: string
                filters: []
                format: table
                global_query_id: ""
                parser: backend
                refId: Anno
                root_selector: $.Results
                source: url
                type: json
                url: /api/v1/workflow/WorkflowInfos?$filter=WorkflowCtx.TargetCtxList.TargetMoid eq '${ServerMoid}'
                url_options:
                    data: ""
                    method: GET
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              enable: true
              hide: false
              iconColor: '#3e9ec7'
              mappings:
                id:
                    source: field
                    value: Moid
                tags:
                    source: field
                    value: Status
                text:
                    source: field
                    value: Email
                time:
                    source: field
                    value: CreateTime
                timeEnd:
                    source: field
                    value: EndTime
                title:
                    source: field
                    value: Name
              name: Chassis Actions
              target:
                columns:
                    - selector: Moid
                      text: Moid
                      type: string
                    - selector: CreateTime
                      text: CreateTime
                      type: timestamp
                    - selector: EndTime
                      text: EndTime
                      type: timestamp
                    - selector: Name
                      text: Name
                      type: string
                    - selector: Status
                      text: Status
                      type: string
                    - selector: Email
                      text: Email
                      type: string
                filters: []
                format: table
                global_query_id: ""
                parser: backend
                refId: Anno
                root_selector: $.Results
                source: url
                type: json
                url: /api/v1/workflow/WorkflowInfos?$filter=WorkflowCtx.TargetCtxList.TargetMoid eq '${ChassisName:value}'
                url_options:
                    data: ""
                    method: GET
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              enable: true
              hide: false
              iconColor: '#016f83'
              mappings:
                id:
                    source: field
                    value: Moid
                tags:
                    source: field
                    value: Status
                text:
                    source: field
                    value: Email
                time:
                    source: field
                    value: CreateTime
                timeEnd:
                    source: field
                    value: EndTime
                title:
                    source: field
                    value: Name
              name: FI Actions
              target:
                columns:
                    - selector: Moid
                      text: Moid
                      type: string
                    - selector: CreateTime
                      text: CreateTime
                      type: timestamp
                    - selector: EndTime
                      text: EndTime
                      type: timestamp
                    - selector: Name
                      text: Name
                      type: string
                    - selector: Status
                      text: Status
                      type: string
                    - selector: Email
                      text: Email
                      type: string
                filters: []
                format: table
                global_query_id: ""
                parser: backend
                refId: Anno
                root_selector: $.Results
                source: url
                type: json
                url: /api/v1/workflow/WorkflowInfos?$filter=WorkflowCtx.TargetCtxList.TargetMoid in('${FIAMoid}','${FIBMoid}')
                url_options:
                    data: ""
                    method: GET
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              enable: true
              hide: false
              iconColor: dark-yellow
              mappings:
                id:
                    source: field
                    value: AffectedObject
                tags:
                    source: field
                    value: Flapping
                text:
                    source: field
                    value: AffectedMoDisplayName
                time:
                    source: field
                    value: CreateTime
                title:
                    source: field
                    value: Description
              name: 'Alarms: Warning'
              target:
                columns:
                    - selector: AffectedMoDisplayName
                      text: AffectedMoDisplayName
                      type: string
                    - selector: AffectedObject
                      text: AffectedObject
                      type: string
                    - selector: Code
                      text: Code
                      type: string
                    - selector: CreateTime
                      text: CreateTime
                      type: timestamp
                    - selector: Description
                      text: Description
                      type: string
                    - selector: Flapping
                      text: Flapping
                      type: string
                filters: []
                format: table
                global_query_id: ""
                parser: backend
                refId: Anno
                root_selector: $.Results
                source: url
                type: json
                url: /api/v1/cond/Alarms?$filter=Severity eq 'Warning' and Acknowledge eq 'None' and Suppressed eq false and AncestorMoType eq 'compute.Blade' and AncestorMoId eq '${ServerMoid}'
                url_options:
                    data: ""
                    method: GET
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              enable: true
              hide: false
              iconColor: dark-red
              mappings:
                id:
                    source: field
                    value: AffectedObject
                tags:
                    source: field
                    value: Flapping
                text:
                    source: field
                    value: AffectedMoDisplayName
                time:
                    source: field
                    value: CreateTime
                title:
                    source: field
                    value: Description
              name: 'Alarms: Critical'
              target:
                columns:
                    - selector: AffectedMoDisplayName
                      text: AffectedMoDisplayName
                      type: string
                    - selector: AffectedObject
                      text: AffectedObject
                      type: string
                    - selector: Code
                      text: Code
                      type: string
                    - selector: CreateTime
                      text: CreateTime
                      type: timestamp
                    - selector: Description
                      text: Description
                      type: string
                    - selector: Flapping
                      text: Flapping
                      type: string
                filters: []
                format: table
                global_query_id: ""
                parser: backend
                refId: Anno
                root_selector: $.Results
                source: url
                type: json
                url: /api/v1/cond/Alarms?$filter=Severity eq 'Critical' and Acknowledge eq 'None' and Suppressed eq false and AncestorMoType eq 'compute.Blade' and AncestorMoId eq '${ServerMoid}'
                url_options:
                    data: ""
                    method: GET
    editable: true
    fiscalYearStartMonth: 0
    graphTooltip: 0
    links: []
    panels:
        - datasource:
            type: datasource
            uid: grafana
          fieldConfig:
            defaults:
                thresholds:
                    mode: absolute
                    steps:
                        - color: transparent
            overrides: []
          gridPos:
            h: 4
            w: 24
            x: 0
            "y": 0
          id: 1
          options:
            afterRender: |-
                // START OF JAVASCRIPT FUNCTIONS
                function row_iteration(structure, current) {
                  const row = add_row();
                  structure.forEach(function (item) {
                    selected = false;
                    if (item['name'] == current[0]) {
                      selected = true;
                    }
                    new_button = add_button(item["name"], item["link"], selected, item["children"])
                    row.append(new_button)
                    if (selected) {
                      if (item['children'].length > 0) {
                        row_iteration(item['children'], current.slice(1))
                      }
                    }
                  });
                }

                function add_row() {
                  const container = document.getElementById("container");
                  const newDiv = document.createElement('div');
                  newDiv.classList.add('row');
                  container.appendChild(newDiv);

                  return newDiv
                }

                function redirect(path) {
                  const url = new URL(window.location.href);
                  const params = new URLSearchParams(url.search);
                  window.location.href = './d/' + path + '?' + params.toString();
                }

                function button_navigate(link, children) {
                  if (link == "") {
                    children.forEach(function (item) {
                      if (item["name"] == current_item[current_item.length - 1]) {
                        link = item["link"]
                      }
                    });
                  }

                  if (link == "") {
                    if (children[0]["link"] == "") {
                      link = children[0]["children"][0]["link"]
                    } else {
                      link = children[0]["link"]
                    }
                  }
                  redirect(link)
                }

                const platform_type_selector = document.getElementById('platform_type_selector');
                platform_type_selector.onchange = function () {
                  const selectedValue = platform_type_selector.value;
                  const category = nav[selectedValue][0];
                  const link = nav[selectedValue][0]['link'];
                  const children = nav[selectedValue][0]['children'];
                  while ((children.length) > 0) {
                    const link = children[0]['link'];
                    const children = children[0]['children'];
                  }
                  redirect(link)
                };

                function add_button(name, link, selected, children) {
                  const newDiv = document.createElement('div');
                  newDiv.classList.add('button');
                  if (selected) { newDiv.classList.add('button-active'); }
                  newDiv.textContent = name;
                  newDiv.onclick = function () {
                    button_navigate(link, children)
                  };

                  return newDiv
                }

                container = document.getElementById("container");
                if (container) {
                  container.innerHTML = '';
                } else {
                  const newDiv = document.createElement('div');
                  newDiv.id = 'container'
                  document.body.append(newDiv)
                }

                structure = nav[current_item[0]]
                row_iteration(structure, current_item.slice(1))
                // END OF JAVASCRIPT FUNCTIONS
            content: |-
                <div id="container"></div>
                <div id="platform_type">
                  Platform Type:
                  <select name="platform_type_selector" id="platform_type_selector">
                        <option value="overview">Overview</option>
                        <option value="domain" selected>Domain</option>
                        <option value="standalone">Standalone</option>
                        <option value="edge">Unified Edge</option>
                      </select>
                </div>
            contentPartials: []
            defaultContent: The query didn't return any results.
            editor:
                format: auto
                language: html
            editors:
                - styles
                - helpers
                - afterRender
            externalStyles: []
            helpers: |-
                current_item = ["domain", "Network", "Server", "Congestion"]

                // START OF NAVIGATION STRUCTURE
                nav = {
                  "overview": [
                    { "name": "Overview", "link": "is_overview_overview", "children": [] },
                  ],
                  "domain": [
                    { "name": "Overview", "link": "is_domain_overview", "children": [] },
                    {
                      "name": "Network", "link": "", "children": [
                        {
                          "name": "Domain", "link": "", "children": [
                            { "name": "Overview", "link": "is_domain_net_domain_overview", "children": [] },
                            { "name": "Utilization %", "link": "is_domain_net_domain_util-percent", "children": [] },
                            { "name": "Utilization bps", "link": "is_domain_net_domain_util-bps", "children": [] },
                            { "name": "Congestion", "link": "is_domain_net_domain_congestion", "children": [] },
                            { "name": "Errors", "link": "is_domain_net_domain_errors", "children": [] }
                          ]
                        },
                        {
                          "name": "Chassis", "link": "", "children": [
                            { "name": "Overview", "link": "is_domain_net_chassis_overview", "children": [] },
                            { "name": "Utilization %", "link": "is_domain_net_chassis_util-percent", "children": [] },
                            { "name": "Utilization bps", "link": "is_domain_net_chassis_util-bps", "children": [] },
                            { "name": "Congestion", "link": "is_domain_net_chassis_congestion", "children": [] },
                            { "name": "Errors", "link": "is_domain_net_chassis_errors", "children": [] }
                          ]
                        },
                        {
                          "name": "Server", "link": "", "children": [
                            { "name": "Overview", "link": "is_domain_net_server_overview", "children": [] },
                            { "name": "Utilization %", "link": "is_domain_net_server_util-percent", "children": [] },
                            { "name": "Utilization bps", "link": "is_domain_net_server_util-bps", "children": [] },
                            { "name": "Congestion", "link": "is_domain_net_server_congestion", "children": [] },
                            { "name": "Errors", "link": "is_domain_net_server_errors", "children": [] }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Environmental", "link": "", "children": [
                        { "name": "Domain", "link": "is_domain_environ_domain", "children": [] },
                        { "name": "Chassis", "link": "is_domain_environ_chassis", "children": [] }
                      ]
                    }
                  ],
                  "standalone": [
                    { "name": "Overview", "link": "is_standalone_overview", "children": [] }
                  ],
                  "edge": [
                    { "name": "Overview", "link": "is_edge_overview", "children": [] }
                  ]
                }
                // END OF NAVIGATION STRUCTURE
            renderMode: data
            styles: |-
                /* START OF CSS STYLES */
                .row {
                  display: flex;
                  gap: max(4vw, 10px);
                  border-bottom: 1px solid white;
                  margin: 0 0 5px 8px;
                  padding: 0 0 5px 0;
                }

                #platform_type {
                  position: absolute;
                  right: 8px;
                  top: 8px;
                }

                #platform_type select {
                  height: 28px;
                  width: 120px;
                  border: 1px solid white;
                }

                .button {
                  padding: 4px 10px;
                  background-color: #1e60c4;
                  width: 128px;
                  height: 29px;
                  border-radius: 10px;
                  text-align: center;
                  vertical-align: middle;
                  cursor: pointer;
                }

                .button-active {
                  background-color: #8f3bb8;
                }
                /* END OF CSS STYLES */
            wrap: false
          pluginVersion: 5.7.0
          targets:
            - datasource:
                type: datasource
                uid: grafana
              queryType: randomWalk
              refId: A
          title: ""
          transparent: true
          type: marcusolsson-dynamictext-panel
        - datasource:
            type: datasource
            uid: grafana
          fieldConfig:
            defaults:
                thresholds:
                    mode: absolute
                    steps:
                        - color: green
                        - color: red
                          value: 80
            overrides: []
          gridPos:
            h: 2
            w: 24
            x: 0
            "y": 4
          id: 3
          options:
            afterRender: |-
                document.getElementById('feedback_btn').onclick = function () { window.open('https://forms.office.com/r/Df2AHsVXh9', '_blank').focus(); };
                document.getElementById('webex_btn').onclick = function () { window.open('https://eurl.io/#XpSGnOuwR', '_blank').focus(); };
            content: |-
                <div id="container">
                  <div class="message">
                    This dashboard is currently in <span class="beta_highlight">BETA</span>!
                  </div>
                  <div class="btn" id="feedback_btn">
                      Provide Feedback or Report Bug
                  </div>
                  <div class="btn" id="webex_btn" onclick="redirect('www.test.com');">
                    Webex Q&A Space
                  </div>
                </div>
            contentPartials: []
            defaultContent: The query didn't return any results.
            editor:
                format: auto
                language: markdown
            editors:
                - styles
                - afterRender
            externalStyles: []
            helpers: ""
            renderMode: data
            styles: |-
                #container {
                    margin-top: 5px;
                    height: 40px;
                    line-height: 40px;
                }

                .message {
                  font-size: 22px;
                  float: left;
                }

                .beta_highlight {
                  color: rgb(255, 29, 13);
                  font-weight: 800;
                }

                .btn {
                  background-color: rgb(0, 124, 158);
                  color: #FFF;
                  margin-left: 28px;
                }
            wrap: false
          pluginVersion: 5.7.0
          targets:
            - datasource:
                type: datasource
                uid: grafana
              queryType: randomWalk
              refId: A
          title: ""
          transparent: true
          type: marcusolsson-dynamictext-panel
        - collapsed: true
          gridPos:
            h: 1
            w: 24
            x: 0
            "y": 6
          id: 14
          panels:
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    thresholds:
                        mode: absolute
                        steps:
                            - color: green
                            - color: red
                              value: 80
                overrides: []
              gridPos:
                h: 10
                w: 7
                x: 0
                "y": 7
              id: 24
              options:
                afterRender: ""
                content: |-
                    <b>Server Name</b>: {{{@root.Name}}}<br />
                    <b>Serial</b>: {{{@root.Serial}}}<br />
                    <b>Slot Id</b>: {{{@root.SlotId}}}<br />
                    <b>Model</b>: {{{@root.Model}}}

                    <b>Moid</b>: {{{@root.Moid}}}<br />
                    <b>Management IP</b>: {{{@root.MgmtIpAddress}}}<br />
                    <b>Power State</b>: {{{@root.OperPowerState}}}<br />
                    <b>Presence</b>: {{{@root.Presence}}}

                    <b>Adaptor Count</b>: {{{@root.NumAdaptors}}}<br />
                    <b>Eth Interfaces Count</b>: {{{@root.NumEthHostInterfaces}}}<br />
                    <b>FC Interfaces Count</b>: {{{@root.NumFcHostInterfaces}}}
                contentPartials: []
                defaultContent: The query didn't return any results.
                editor:
                    format: auto
                    height: 200
                    language: markdown
                editors: []
                externalScripts: []
                externalStyles: []
                helpers: ""
                renderMode: everyRow
                styles: ""
                wrap: true
              pluginVersion: 5.7.0
              targets:
                - columns: []
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  parser: simple
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  url: /api/v1/compute/Blades?$filter=Moid eq '${ServerMoid}'
                  url_options:
                    data: ""
                    method: GET
              title: Server Details
              type: marcusolsson-dynamictext-panel
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    thresholds:
                        mode: absolute
                        steps:
                            - color: green
                            - color: red
                              value: 80
                overrides: []
              gridPos:
                h: 10
                w: 6
                x: 7
                "y": 7
              id: 25
              options:
                afterRender: ""
                content: |-
                    <b>Chassis Name</b>: {{{Name}}}<br />
                    <b>Serial</b>: {{{Serial}}}<br />

                    <b>Moid</b>: {{{Moid}}}<br />
                    <b>Chassis Id</b>: {{{ChassisId}}}<br />
                    <b>Health Status</b>: {{{HealthStatus}}}<br />
                    <b>Connection Status</b>: {{{ConnectionStatus}}}<br />
                contentPartials: []
                defaultContent: The query didn't return any results.
                editor:
                    format: auto
                    height: 200
                    language: markdown
                editors: []
                externalScripts: []
                externalStyles: []
                helpers: ""
                renderMode: everyRow
                styles: ""
                wrap: true
              pluginVersion: 5.7.0
              targets:
                - columns:
                    - selector: AlarmSummary.Health
                      text: HealthStatus
                      type: string
                    - selector: ChassisId
                      text: ChassisId
                      type: string
                    - selector: ConnectionPath
                      text: ConnectionPath
                      type: string
                    - selector: ConnectionStatus
                      text: ConnectionStatus
                      type: string
                    - selector: ExpanderModules
                      text: ExpanderModules
                      type: string
                    - selector: Ioms
                      text: Ioms
                      type: string
                    - selector: Moid
                      text: Moid
                      type: string
                    - selector: Name
                      text: Name
                      type: string
                    - selector: Serial
                      text: Serial
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  url: /api/v1/equipment/Chasses?$filter=Moid eq '${ChassisName:value}'
                  url_options:
                    data: ""
                    method: GET
              title: Chassis Details
              type: marcusolsson-dynamictext-panel
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    thresholds:
                        mode: absolute
                        steps:
                            - color: green
                            - color: red
                              value: 80
                overrides: []
              gridPos:
                h: 18
                w: 5
                x: 13
                "y": 7
              id: 28
              options:
                afterRender: ""
                content: |-
                    <b>Profile Name</b>: {{{ProfileName}}}<br />
                    <b>Profile Moid</b>: {{{ProfileMoid}}}<br />
                    <b>Organization</b>: {{{OrganizationName}}}<br />
                    <b>Template</b>: {{{TemplateName}}}<br />

                    <b>Status</b>: {{{DeployStatus}}}<br />
                    <b>Deployed Switches</b>: {{{DeployedSwitches}}}<br />
                contentPartials: []
                defaultContent: The query didn't return any results.
                editor:
                    format: auto
                    height: 200
                    language: markdown
                editors: []
                externalScripts: []
                externalStyles: []
                helpers: ""
                renderMode: everyRow
                styles: ""
                wrap: true
              pluginVersion: 5.7.0
              targets:
                - columns:
                    - selector: ConfigContext
                      text: ConfigContext
                      type: string
                    - selector: DeployStatus
                      text: DeployStatus
                      type: string
                    - selector: DeployedSwitches
                      text: DeployedSwitches
                      type: string
                    - selector: Moid
                      text: ProfileMoid
                      type: string
                    - selector: Name
                      text: ProfileName
                      type: string
                    - selector: Organization.Name
                      text: OrganizationName
                      type: string
                    - selector: SrcTemplate.Name
                      text: TemplateName
                      type: string
                    - selector: SwitchProfiles
                      text: SwitchProfiles
                      type: string
                    - selector: SwitchProfilesCount
                      text: SwitchProfilesCount
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  url: /api/v1/fabric/SwitchClusterProfiles?$filter=Moid eq '${DomainProfileMoid}'&$expand=Organization,SrcTemplate
                  url_options:
                    data: ""
                    method: GET
              title: Domain Profile Details
              type: marcusolsson-dynamictext-panel
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    thresholds:
                        mode: absolute
                        steps:
                            - color: green
                            - color: red
                              value: 80
                overrides: []
              gridPos:
                h: 18
                w: 6
                x: 18
                "y": 7
              id: 29
              options:
                afterRender: ""
                content: |-
                    <b>FI Name</b>: {{{Name}}}<br />
                    <b>Serial</b>: {{{Serial}}}<br />
                    <b>Model</b>: {{{Model}}}<br />
                    <b>Bundle Version</b>: {{{BundleVersion}}}<br />
                    <b>Firmware Version</b>: {{{FirmwareVersion}}}<br />

                    <b>Moid</b>: {{{Moid}}}<br />
                    <b>OOB IP</b>: {{{OutOfBandIpAddress}}}<br />
                    <b>Health Status</b>: {{{HealthStatus}}}<br />
                    <b>Health Status</b>: {{{Operability}}}<br />
                    <b>Evac State</b>: admin-{{{AdminEvacState}}} / operational-{{{OperEvacState}}}<br />
                    <b>Eth Switching Mode</b>: {{{EthernetSwitchingMode}}}<br />
                    <b>FC Switching Mode</b>: {{{FcSwitchingMode}}}<br />
                contentPartials: []
                defaultContent: The query didn't return any results.
                editor:
                    format: auto
                    height: 200
                    language: markdown
                editors: []
                externalScripts: []
                externalStyles: []
                helpers: ""
                renderMode: everyRow
                styles: ""
                wrap: true
              pluginVersion: 5.7.0
              targets:
                - columns:
                    - selector: AdminEvacState
                      text: AdminEvacState
                      type: string
                    - selector: AlarmSummary.Health
                      text: HealthStatus
                      type: string
                    - selector: BundleVersion
                      text: BundleVersion
                      type: string
                    - selector: EthernetSwitchingMode
                      text: EthernetSwitchingMode
                      type: string
                    - selector: FcSwitchingMode
                      text: FcSwitchingMode
                      type: string
                    - selector: FirmwareVersion
                      text: FirmwareVersion
                      type: string
                    - selector: Model
                      text: Model
                      type: string
                    - selector: Moid
                      text: Moid
                      type: string
                    - selector: Name
                      text: Name
                      type: string
                    - selector: OperEvacState
                      text: OperEvacState
                      type: string
                    - selector: Operability
                      text: Operability
                      type: string
                    - selector: OutOfBandIpAddress
                      text: OutOfBandIpAddress
                      type: string
                    - selector: Serial
                      text: Serial
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  url: /api/v1/network/ElementSummaries?$filter=contains(Name,'${DomainName} FI-')
                  url_options:
                    data: ""
                    method: GET
              title: Fabric Interconnect Details
              type: marcusolsson-dynamictext-panel
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    thresholds:
                        mode: absolute
                        steps:
                            - color: green
                            - color: red
                              value: 80
                overrides: []
              gridPos:
                h: 8
                w: 7
                x: 0
                "y": 33
              id: 26
              options:
                afterRender: ""
                content: |-
                    <b>Profile Name</b>: {{{ProfileName}}}<br />
                    <b>Profile Moid</b>: {{{ProfileMoid}}}<br />
                    <b>Organization</b>: {{{OrganizationName}}}<br />
                    <b>Template</b>: {{{TemplateName}}}<br />

                    <b>Status</b>: {{{DeployStatus}}}<br />
                    <b>Current Action</b>: {{{CurrentAction}}}<br />
                    <b>Scheduled Actions</b>: {{{ScheduledActions}}}<br />
                contentPartials: []
                defaultContent: The query didn't return any results.
                editor:
                    format: auto
                    height: 200
                    language: markdown
                editors: []
                externalScripts: []
                externalStyles: []
                helpers: ""
                renderMode: everyRow
                styles: ""
                wrap: true
              pluginVersion: 5.7.0
              targets:
                - columns:
                    - selector: Name
                      text: ProfileName
                      type: string
                    - selector: Moid
                      text: ProfileMoid
                      type: string
                    - selector: Organization.Name
                      text: OrganizationName
                      type: string
                    - selector: SrcTemplate.Name
                      text: TemplateName
                      type: string
                    - selector: DeployStatus
                      text: DeployStatus
                      type: string
                    - selector: Action
                      text: CurrentAction
                      type: string
                    - selector: ScheduledActions
                      text: ScheduledActions
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  url: /api/v1/server/Profiles?$filter=Moid eq '${ServerProfileMoid}'&$expand=Organization,SrcTemplate
                  url_options:
                    data: ""
                    method: GET
              title: Server Profile Details
              type: marcusolsson-dynamictext-panel
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    thresholds:
                        mode: absolute
                        steps:
                            - color: green
                            - color: red
                              value: 80
                overrides: []
              gridPos:
                h: 8
                w: 6
                x: 7
                "y": 33
              id: 27
              options:
                afterRender: ""
                content: |-
                    <b>Profile Name</b>: {{{ProfileName}}}<br />
                    <b>Profile Moid</b>: {{{ProfileMoid}}}<br />
                    <b>Organization</b>: {{{OrganizationName}}}<br />
                    <b>Template</b>: {{{TemplateName}}}<br />

                    <b>Current Action</b>: {{{CurrentAction}}}<br />
                    <b>Scheduled Actions</b>: {{{ScheduledActions}}}<br />
                contentPartials: []
                defaultContent: The query didn't return any results.
                editor:
                    format: auto
                    height: 200
                    language: markdown
                editors: []
                externalScripts: []
                externalStyles: []
                helpers: ""
                renderMode: everyRow
                styles: ""
                wrap: true
              pluginVersion: 5.7.0
              targets:
                - columns:
                    - selector: Action
                      text: CurrentAction
                      type: string
                    - selector: ConfigResult
                      text: ConfigResult
                      type: string
                    - selector: IomProfiles
                      text: IomProfiles
                      type: string
                    - selector: Moid
                      text: ProfileMoid
                      type: string
                    - selector: Name
                      text: ProfileName
                      type: string
                    - selector: Organization.Name
                      text: OrganizationName
                      type: string
                    - selector: ScheduledActions
                      text: ScheduledActions
                      type: string
                    - selector: SrcTemplate.Name
                      text: TemplateName
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  url: /api/v1/chassis/Profiles?$filter=Moid eq '${ChassisProfileMoid}'&$expand=Organization,SrcTemplate,ConfigResult,IomProfiles
                  url_options:
                    data: ""
                    method: GET
              title: Chassis Profile Details
              type: marcusolsson-dynamictext-panel
          title: Inventory & Configuration
          type: row
        - collapsed: true
          gridPos:
            h: 1
            w: 24
            x: 0
            "y": 7
          id: 13
          panels:
            - datasource:
                type: datasource
                uid: grafana
              fieldConfig:
                defaults:
                    thresholds:
                        mode: absolute
                        steps:
                            - color: green
                overrides: []
              gridPos:
                h: 9
                w: 24
                x: 0
                "y": 8
              id: 22
              options:
                afterRender: ""
                content: |-
                    <b>vNIC State</b>: {{{OperState}}}/{{{ActiveOperState}}}<br />
                    <b>vEth State</b>: {{{VethernetOperState}}}/{{{ActiveVethOperState}}}<br />
                    <b>Standby vEth State</b>: {{{StandbyVethOperState}}}<br />

                    <b>VIF Id</b>: {{{VifId}}}<br />
                    <b>Standby VIF Id</b>: {{{StandbyVifId}}}<br />
                    <b>vNIC MAC address</b>: {{{MacAddress}}}<br />
                    <b>Adapter Id</b>: {{{AdapterId}}}<br />
                    <b>QinQ enabled</b>: {{{QinqEnabled}}} ({{{QinqVlan}}})<br />

                    <b>Fabric</b>: {{{SwitchId}}}<br />

                    <b>IFM Downlink</b><br />
                    {{#if hif1_port}}Port 1/1/{{hif1_port}} (PC{{hif1_pc}}, {{hif1_fabric}}) - {{hif1_status}}<br />{{/if}}
                    {{#if hif2_port}}Port 1/1/{{hif2_port}} (PC{{hif2_pc}}, {{hif2_fabric}}) - {{hif2_status}}<br />{{/if}}
                    {{#if hif3_port}}Port 1/1/{{hif3_port}} (PC{{hif3_pc}}, {{hif3_fabric}}) - {{hif3_status}}<br />{{/if}}
                    {{#if hif4_port}}Port 1/1/{{hif4_port}} (PC{{hif4_pc}}, {{hif4_fabric}}) - {{hif4_status}}<br />{{/if}}
                    {{#if hif5_port}}Port 1/1/{{hif5_port}} (PC{{hif5_pc}}, {{hif5_fabric}}) - {{hif5_status}}<br />{{/if}}
                    {{#if hif6_port}}Port 1/1/{{hif6_port}} (PC{{hif6_pc}}, {{hif6_fabric}}) - {{hif6_status}}<br />{{/if}}
                    {{#if hif7_port}}Port 1/1/{{hif7_port}} (PC{{hif7_pc}}, {{hif7_fabric}}) - {{hif7_status}}<br />{{/if}}
                    {{#if hif8_port}}Port 1/1/{{hif8_port}} (PC{{hif8_pc}}, {{hif8_fabric}}) - {{hif8_status}}<br />{{/if}}

                    <b>FI Uplink Port</b><br />
                    {{#if PinnedInterfacePort}}Pinned FI Port: {{{PinnedInterfaceSlot}}}/{{{PinnedInterfacePort}}}<br />{{/if}}
                    {{#if PortChannelId}}Pinned FI Port Channel: {{PortChannelId}}<br />{{/if}}
                    {{#if PinGroupName}}Pin Group: {{{PinGroupName}}}<br />{{/if}}
                contentPartials: []
                defaultContent: The query didn't return any results.
                editor:
                    format: auto
                    height: 200
                    language: markdown
                editors: []
                externalScripts: []
                externalStyles: []
                helpers: ""
                renderMode: everyRow
                styles: ""
                wrap: true
              pluginVersion: 5.7.0
              targets:
                - columns:
                    - selector: ActiveOperState
                      text: ActiveOperState
                      type: string
                    - selector: ActiveVethOperState
                      text: ActiveVethOperState
                      type: string
                    - selector: MacAddress
                      text: MacAddress
                      type: string
                    - selector: OperState
                      text: OperState
                      type: string
                    - selector: PinGroupName
                      text: PinGroupName
                      type: string
                    - selector: QinqEnabled
                      text: QinqEnabled
                      type: string
                    - selector: QinqVlan
                      text: QinqVlan
                      type: string
                    - selector: StandbyVethOperState
                      text: StandbyVethOperState
                      type: string
                    - selector: StandbyVifId
                      text: StandbyVifId
                      type: string
                    - selector: VifId
                      text: VifId
                      type: string
                    - selector: Vethernet.NetworkElement.SwitchId
                      text: SwitchId
                      type: string
                    - selector: Vethernet.OperState
                      text: VethernetOperState
                      type: string
                    - selector: Vethernet.PinnedInterface.SlotId
                      text: PinnedInterfaceSlot
                      type: string
                    - selector: Vethernet.PinnedInterface.PortId
                      text: PinnedInterfacePort
                      type: string
                    - selector: AdapterUnit.AdapterId
                      text: AdapterId
                      type: string
                    - selector: Vethernet.PinnedInterface.AggregatePortId
                      text: PinnedInterfaceAggregatePort
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.0.AcknowledgedPeerInterface.PortId
                      text: hif1_port
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.0.AcknowledgedPeerInterface.PortChannelId
                      text: hif1_pc
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.0.AcknowledgedPeerInterface.OperState
                      text: hif1_status
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.0.AcknowledgedPeerInterface.SwitchId
                      text: hif1_fabric
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.1.AcknowledgedPeerInterface.PortId
                      text: hif2_port
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.1.AcknowledgedPeerInterface.PortChannelId
                      text: hif2_pc
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.1.AcknowledgedPeerInterface.OperState
                      text: hif2_status
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.1.AcknowledgedPeerInterface.SwitchId
                      text: hif2_fabric
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.2.AcknowledgedPeerInterface.PortId
                      text: hif3_port
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.2.AcknowledgedPeerInterface.PortChannelId
                      text: hif3_pc
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.2.AcknowledgedPeerInterface.OperState
                      text: hif3_status
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.2.AcknowledgedPeerInterface.SwitchId
                      text: hif3_fabric
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.3.AcknowledgedPeerInterface.PortId
                      text: hif4_port
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.3.AcknowledgedPeerInterface.PortChannelId
                      text: hif4_pc
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.3.AcknowledgedPeerInterface.OperState
                      text: hif4_status
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.3.AcknowledgedPeerInterface.SwitchId
                      text: hif4_fabric
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.4.AcknowledgedPeerInterface.PortId
                      text: hif5_port
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.4.AcknowledgedPeerInterface.PortChannelId
                      text: hif5_pc
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.4.AcknowledgedPeerInterface.OperState
                      text: hif5_status
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.4.AcknowledgedPeerInterface.SwitchId
                      text: hif5_fabric
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.5.AcknowledgedPeerInterface.PortId
                      text: hif6_port
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.5.AcknowledgedPeerInterface.PortChannelId
                      text: hif6_pc
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.5.AcknowledgedPeerInterface.OperState
                      text: hif6_status
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.5.AcknowledgedPeerInterface.SwitchId
                      text: hif6_fabric
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.6.AcknowledgedPeerInterface.PortId
                      text: hif7_port
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.6.AcknowledgedPeerInterface.PortChannelId
                      text: hif7_pc
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.6.AcknowledgedPeerInterface.OperState
                      text: hif7_status
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.6.AcknowledgedPeerInterface.SwitchId
                      text: hif7_fabric
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.7.AcknowledgedPeerInterface.PortId
                      text: hif8_port
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.7.AcknowledgedPeerInterface.PortChannelId
                      text: hif8_pc
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.7.AcknowledgedPeerInterface.OperState
                      text: hif8_status
                      type: string
                    - selector: AdapterUnit.ExtEthIfs.7.AcknowledgedPeerInterface.SwitchId
                      text: hif8_fabric
                      type: string
                    - selector: Vethernet.PinnedInterface.PortChannelId
                      text: PortChannelId
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  url: /api/v1/adapter/HostEthInterfaces?$filter=Ancestors.Moid eq '${ServerMoid}' and Moid eq '${HostEthInterfaces:value}'&$expand=AdapterUnit($select=AdapterId,ExtEthIfs%3B$expand=ExtEthIfs($select=AcknowledgedPeerInterface,SwitchId%3B$expand=AcknowledgedPeerInterface($expand=AcknowledgedPeerInterface,Parent($select=NetworkPorts%3B$expand=NetworkPorts($select=AcknowledgedPeerInterface))))),Vethernet($select=VethId,OperState,OperReason,BoundPcId,NetworkElement,PinnedInterface,BoundInterface%3B$expand=NetworkElement($select=SwitchId),PinnedInterface($select=PortId,SlotId,PortChannelId,AggregatePortId),BoundInterface($select=PortId,SlotId,PortChannelId)),Ancestors($select=Ioms%3B$expand=Ioms($select=Model)),StandbyVethernet($select=VethId,OperState,OperReason,BoundPcId,NetworkElement,PinnedInterface,BoundInterface%3B$expand=NetworkElement($select=SwitchId),PinnedInterface($select=PortId,SlotId,PortChannelId,AggregatePortId),BoundInterface($select=PortId,SlotId,PortChannelId))
                  url_options:
                    data: ""
                    method: GET
              title: ${HostEthInterfaces:text} (vNIC)
              type: marcusolsson-dynamictext-panel
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    thresholds:
                        mode: absolute
                        steps:
                            - color: green
                overrides: []
              gridPos:
                h: 9
                w: 24
                x: 0
                "y": 33
              id: 23
              options:
                afterRender: ""
                content: |-
                    <b>vHBA State</b>: {{{OperState}}}<br />

                    <b>VIF Id</b>: {{{VifId}}}<br />
                    <b>Adapter Id</b>: {{{AdapterId}}}<br />
                contentPartials: []
                defaultContent: The query didn't return any results.
                editor:
                    format: auto
                    height: 200
                    language: markdown
                editors: []
                externalScripts: []
                externalStyles: []
                helpers: ""
                renderMode: everyRow
                styles: ""
                wrap: true
              pluginVersion: 5.7.0
              targets:
                - columns:
                    - selector: ActiveOperState
                      text: ActiveOperState
                      type: string
                    - selector: MacAddress
                      text: MacAddress
                      type: string
                    - selector: OperState
                      text: OperState
                      type: string
                    - selector: AdapterUnit.AdapterId
                      text: AdapterId
                      type: string
                    - selector: VifId
                      text: VifId
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  url: /api/v1/adapter/HostFcInterfaces?$filter=Ancestors.Moid eq '${ServerMoid}' and Moid eq '${HostFcInterfaces:value}'&$expand=AdapterUnit
                  url_options:
                    data: ""
                    method: GET
              title: ${HostFcInterfaces:text} (vHBA)
              type: marcusolsson-dynamictext-panel
          title: VIF Paths
          type: row
        - collapsed: true
          gridPos:
            h: 1
            w: 24
            x: 0
            "y": 8
          id: 10
          panels:
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    color:
                        mode: palette-classic
                    custom:
                        axisBorderShow: false
                        axisCenteredZero: false
                        axisColorMode: text
                        axisLabel: ""
                        axisPlacement: auto
                        barAlignment: 0
                        barWidthFactor: 0.6
                        drawStyle: line
                        fillOpacity: 0
                        gradientMode: none
                        hideFrom:
                            legend: false
                            tooltip: false
                            viz: false
                        insertNulls: false
                        lineInterpolation: linear
                        lineStyle:
                            fill: solid
                        lineWidth: 1
                        pointSize: 5
                        scaleDistribution:
                            type: linear
                        showPoints: auto
                        spanNulls: false
                        stacking:
                            group: A
                            mode: none
                        thresholdsStyle:
                            mode: "off"
                    mappings: []
                    max: 100
                    min: 0
                    thresholds:
                        mode: percentage
                        steps:
                            - color: green
                            - color: '#EAB839'
                              value: 70
                            - color: red
                              value: 90
                overrides: []
              gridPos:
                h: 8
                w: 12
                x: 0
                "y": 9
              id: 30
              options:
                legend:
                    calcs: []
                    displayMode: list
                    placement: bottom
                    showLegend: true
                tooltip:
                    hideZeros: false
                    mode: multi
                    sort: desc
              pluginVersion: 12.0.0
              targets:
                - columns:
                    - selector: timestamp
                      text: Time
                      type: timestamp
                    - selector: event.eth_pause
                      text: eth_pause
                      type: number
                    - selector: event.Identifier
                      text: Name
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  parser: backend
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  uql: |-
                    parse-json
                    | project "Timestamp"=todatetime("timestamp"), "event"
                  url: /api/v1/telemetry/TimeSeries
                  url_options:
                    body_content_type: application/json
                    body_type: raw
                    data: |4-
                          {
                            "queryType": "groupBy",
                            "dataSource": "NetworkInterfaces",
                            "granularity": {
                               "type": "duration",
                               "duration": $__interval_ms,
                               "timeZone": "$__timezone"
                            },
                            "intervals": ["${__from:date}/${__to:date}"],
                            "dimensions": [
                              "Identifier",
                              "domain_name",
                              "host_name",
                              "chassis_number",
                              "port_role",
                              "name",
                              "port_spec"
                            ],
                            "virtualColumns": [{
                              "type": "nested-field",
                              "columnName": "intersight.domain.name",
                              "outputName": "domain_name",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "host.name",
                              "outputName": "host_name",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "hw.chassis.number",
                              "outputName": "chassis_number",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "hw.network.port.role",
                              "outputName": "port_role",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "expression",
                              "name": "port_spec",
                              "expression": "concat(port_role + ' # ' + name)",
                              "outputType": "STRING"
                            },{
                              "type": "expression",
                              "name": "Identifier",
                              "expression": "concat(domain_name + ' (' + name + ')')",
                              "outputType": "STRING"
                            }],
                            "filter": {
                              "type": "and",
                              "fields": [
                                {
                                  "type": "in",
                                  "dimension": "intersight.domain.name",
                                  "values": [${DomainName:doublequote}]
                                },
                                {
                                  "type": "search",
                                  "dimension": "host.name",
                                  "query": {
                                    "type": "insensitive_contains",
                                    "value": " FI-A"
                                  }
                                },
                                {
                                    "type": "in",
                                    "dimension": "hw.network.port.role",
                                    "values": [
                                      "eth_uplink_pc"
                                    ]
                                },
                                {
                                  "type": "selector",
                                  "dimension": "instrument.name",
                                  "value": "hw.network"
                                }
                              ]
                            },
                            "aggregations": [
                              {
                                "type": "longSum",
                                "name": "eth_pause",
                                "fieldName": "hw.errors_network_transmit_pause"
                              },
                              {
                                "type": "longSum",
                                "name": "fc_pause",
                                "fieldName": "hw.network.packets_transmit_ppp"
                              }
                            ]
                          }
                    method: POST
              title: 'A: Transmit Ethernet pause frames per FI uplink port (Sum)'
              transformations:
                - id: groupingToMatrix
                  options:
                    columnField: Name
                    rowField: Time
                    valueField: eth_pause
                - id: renameByRegex
                  options:
                    regex: (.*)port-channel(.*)
                    renamePattern: $1$2
              type: timeseries
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    color:
                        mode: palette-classic
                    custom:
                        axisBorderShow: false
                        axisCenteredZero: false
                        axisColorMode: text
                        axisLabel: ""
                        axisPlacement: auto
                        barAlignment: 0
                        barWidthFactor: 0.6
                        drawStyle: line
                        fillOpacity: 0
                        gradientMode: none
                        hideFrom:
                            legend: false
                            tooltip: false
                            viz: false
                        insertNulls: false
                        lineInterpolation: linear
                        lineStyle:
                            fill: solid
                        lineWidth: 1
                        pointSize: 5
                        scaleDistribution:
                            type: linear
                        showPoints: auto
                        spanNulls: false
                        stacking:
                            group: A
                            mode: none
                        thresholdsStyle:
                            mode: "off"
                    mappings: []
                    max: 100
                    min: 0
                    thresholds:
                        mode: percentage
                        steps:
                            - color: green
                            - color: '#EAB839'
                              value: 70
                            - color: red
                              value: 90
                overrides: []
              gridPos:
                h: 8
                w: 12
                x: 12
                "y": 9
              id: 31
              options:
                legend:
                    calcs: []
                    displayMode: list
                    placement: bottom
                    showLegend: true
                tooltip:
                    hideZeros: false
                    mode: multi
                    sort: desc
              pluginVersion: 12.0.0
              targets:
                - columns:
                    - selector: timestamp
                      text: Time
                      type: timestamp
                    - selector: event.eth_pause
                      text: eth_pause
                      type: number
                    - selector: event.Identifier
                      text: Name
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  parser: backend
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  uql: |-
                    parse-json
                    | project "Timestamp"=todatetime("timestamp"), "event"
                  url: /api/v1/telemetry/TimeSeries
                  url_options:
                    body_content_type: application/json
                    body_type: raw
                    data: |4-
                          {
                            "queryType": "groupBy",
                            "dataSource": "NetworkInterfaces",
                            "granularity": {
                               "type": "duration",
                               "duration": $__interval_ms,
                               "timeZone": "$__timezone"
                            },
                            "intervals": ["${__from:date}/${__to:date}"],
                            "dimensions": [
                              "Identifier",
                              "domain_name",
                              "host_name",
                              "chassis_number",
                              "port_role",
                              "name",
                              "port_spec"
                            ],
                            "virtualColumns": [{
                              "type": "nested-field",
                              "columnName": "intersight.domain.name",
                              "outputName": "domain_name",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "host.name",
                              "outputName": "host_name",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "hw.chassis.number",
                              "outputName": "chassis_number",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "hw.network.port.role",
                              "outputName": "port_role",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "expression",
                              "name": "port_spec",
                              "expression": "concat(port_role + ' # ' + name)",
                              "outputType": "STRING"
                            },{
                              "type": "expression",
                              "name": "Identifier",
                              "expression": "concat(domain_name + ' (' + name + ')')",
                              "outputType": "STRING"
                            }],
                            "filter": {
                              "type": "and",
                              "fields": [
                                {
                                  "type": "in",
                                  "dimension": "intersight.domain.name",
                                  "values": [${DomainName:doublequote}]
                                },
                                {
                                  "type": "search",
                                  "dimension": "host.name",
                                  "query": {
                                    "type": "insensitive_contains",
                                    "value": " FI-B"
                                  }
                                },
                                {
                                    "type": "in",
                                    "dimension": "hw.network.port.role",
                                    "values": [
                                      "eth_uplink_pc"
                                    ]
                                },
                                {
                                  "type": "selector",
                                  "dimension": "instrument.name",
                                  "value": "hw.network"
                                }
                              ]
                            },
                            "aggregations": [
                              {
                                "type": "longSum",
                                "name": "eth_pause",
                                "fieldName": "hw.errors_network_transmit_pause"
                              },
                              {
                                "type": "longSum",
                                "name": "fc_pause",
                                "fieldName": "hw.network.packets_transmit_ppp"
                              }
                            ]
                          }
                    method: POST
              title: 'B: Transmit Ethernet pause frames per FI uplink port (Sum)'
              transformations:
                - id: groupingToMatrix
                  options:
                    columnField: Name
                    rowField: Time
                    valueField: eth_pause
                - id: renameByRegex
                  options:
                    regex: (.*)port-channel(.*)
                    renamePattern: $1$2
              type: timeseries
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    color:
                        mode: palette-classic
                    custom:
                        axisBorderShow: false
                        axisCenteredZero: false
                        axisColorMode: text
                        axisLabel: ""
                        axisPlacement: auto
                        barAlignment: 0
                        barWidthFactor: 0.6
                        drawStyle: line
                        fillOpacity: 0
                        gradientMode: none
                        hideFrom:
                            legend: false
                            tooltip: false
                            viz: false
                        insertNulls: false
                        lineInterpolation: linear
                        lineStyle:
                            fill: solid
                        lineWidth: 1
                        pointSize: 5
                        scaleDistribution:
                            type: linear
                        showPoints: auto
                        spanNulls: false
                        stacking:
                            group: A
                            mode: none
                        thresholdsStyle:
                            mode: "off"
                    mappings: []
                    max: 100
                    min: 0
                    thresholds:
                        mode: percentage
                        steps:
                            - color: green
                            - color: '#EAB839'
                              value: 70
                            - color: red
                              value: 90
                overrides: []
              gridPos:
                h: 8
                w: 12
                x: 0
                "y": 33
              id: 32
              options:
                legend:
                    calcs: []
                    displayMode: list
                    placement: bottom
                    showLegend: true
                tooltip:
                    hideZeros: false
                    mode: multi
                    sort: desc
              pluginVersion: 12.0.0
              targets:
                - columns:
                    - selector: timestamp
                      text: Time
                      type: timestamp
                    - selector: event.eth_pause
                      text: eth_pause
                      type: number
                    - selector: event.Identifier
                      text: Name
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  parser: backend
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  uql: |-
                    parse-json
                    | project "Timestamp"=todatetime("timestamp"), "event"
                  url: /api/v1/telemetry/TimeSeries
                  url_options:
                    body_content_type: application/json
                    body_type: raw
                    data: |4-
                          {
                            "queryType": "groupBy",
                            "dataSource": "NetworkInterfaces",
                            "granularity": {
                               "type": "duration",
                               "duration": $__interval_ms,
                               "timeZone": "$__timezone"
                            },
                            "intervals": ["${__from:date}/${__to:date}"],
                            "dimensions": [
                              "Identifier",
                              "domain_name",
                              "host_name",
                              "chassis_number",
                              "port_role",
                              "name",
                              "port_spec"
                            ],
                            "virtualColumns": [{
                              "type": "nested-field",
                              "columnName": "intersight.domain.name",
                              "outputName": "domain_name",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "host.name",
                              "outputName": "host_name",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "hw.chassis.number",
                              "outputName": "chassis_number",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "hw.network.port.role",
                              "outputName": "port_role",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "expression",
                              "name": "port_spec",
                              "expression": "concat(port_role + ' # ' + name)",
                              "outputType": "STRING"
                            },{
                              "type": "expression",
                              "name": "Identifier",
                              "expression": "concat(domain_name + ' (' + name + ')')",
                              "outputType": "STRING"
                            }],
                            "filter": {
                              "type": "and",
                              "fields": [
                                {
                                  "type": "in",
                                  "dimension": "intersight.domain.name",
                                  "values": [${DomainName:doublequote}]
                                },
                                {
                                  "type": "search",
                                  "dimension": "host.name",
                                  "query": {
                                    "type": "insensitive_contains",
                                    "value": " FI-A"
                                  }
                                },
                                {
                                    "type": "in",
                                    "dimension": "hw.network.port.role",
                                    "values": [
                                      "eth_uplink_pc"
                                    ]
                                },
                                {
                                  "type": "selector",
                                  "dimension": "instrument.name",
                                  "value": "hw.network"
                                }
                              ]
                            },
                            "aggregations": [
                              {
                                "type": "longSum",
                                "name": "eth_pause",
                                "fieldName": "hw.errors_network_receive_pause"
                              },
                              {
                                "type": "longSum",
                                "name": "fc_pause",
                                "fieldName": "hw.network.packets_receive_ppp"
                              }
                            ]
                          }
                    method: POST
              title: 'A: Receive Ethernet pause frames per FI uplink port (Sum)'
              transformations:
                - id: groupingToMatrix
                  options:
                    columnField: Name
                    rowField: Time
                    valueField: eth_pause
                - id: renameByRegex
                  options:
                    regex: (.*)port-channel(.*)
                    renamePattern: $1$2
              type: timeseries
            - datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              fieldConfig:
                defaults:
                    color:
                        mode: palette-classic
                    custom:
                        axisBorderShow: false
                        axisCenteredZero: false
                        axisColorMode: text
                        axisLabel: ""
                        axisPlacement: auto
                        barAlignment: 0
                        barWidthFactor: 0.6
                        drawStyle: line
                        fillOpacity: 0
                        gradientMode: none
                        hideFrom:
                            legend: false
                            tooltip: false
                            viz: false
                        insertNulls: false
                        lineInterpolation: linear
                        lineStyle:
                            fill: solid
                        lineWidth: 1
                        pointSize: 5
                        scaleDistribution:
                            type: linear
                        showPoints: auto
                        spanNulls: false
                        stacking:
                            group: A
                            mode: none
                        thresholdsStyle:
                            mode: "off"
                    mappings: []
                    max: 100
                    min: 0
                    thresholds:
                        mode: percentage
                        steps:
                            - color: green
                            - color: '#EAB839'
                              value: 70
                            - color: red
                              value: 90
                overrides: []
              gridPos:
                h: 8
                w: 12
                x: 12
                "y": 33
              id: 33
              options:
                legend:
                    calcs: []
                    displayMode: list
                    placement: bottom
                    showLegend: true
                tooltip:
                    hideZeros: false
                    mode: multi
                    sort: desc
              pluginVersion: 12.0.0
              targets:
                - columns:
                    - selector: timestamp
                      text: Time
                      type: timestamp
                    - selector: event.eth_pause
                      text: eth_pause
                      type: number
                    - selector: event.Identifier
                      text: Name
                      type: string
                  datasource:
                    type: yesoreyeram-infinity-datasource
                    uid: ${DataSource}
                  filters: []
                  format: table
                  global_query_id: ""
                  parser: backend
                  refId: A
                  root_selector: ""
                  source: url
                  type: json
                  uql: |-
                    parse-json
                    | project "Timestamp"=todatetime("timestamp"), "event"
                  url: /api/v1/telemetry/TimeSeries
                  url_options:
                    body_content_type: application/json
                    body_type: raw
                    data: |4-
                          {
                            "queryType": "groupBy",
                            "dataSource": "NetworkInterfaces",
                            "granularity": {
                               "type": "duration",
                               "duration": $__interval_ms,
                               "timeZone": "$__timezone"
                            },
                            "intervals": ["${__from:date}/${__to:date}"],
                            "dimensions": [
                              "Identifier",
                              "domain_name",
                              "host_name",
                              "chassis_number",
                              "port_role",
                              "name",
                              "port_spec"
                            ],
                            "virtualColumns": [{
                              "type": "nested-field",
                              "columnName": "intersight.domain.name",
                              "outputName": "domain_name",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "host.name",
                              "outputName": "host_name",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "hw.chassis.number",
                              "outputName": "chassis_number",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "nested-field",
                              "columnName": "hw.network.port.role",
                              "outputName": "port_role",
                              "expectedType": "STRING",
                              "path": "$"
                            },{
                              "type": "expression",
                              "name": "port_spec",
                              "expression": "concat(port_role + ' # ' + name)",
                              "outputType": "STRING"
                            },{
                              "type": "expression",
                              "name": "Identifier",
                              "expression": "concat(domain_name + ' (' + name + ')')",
                              "outputType": "STRING"
                            }],
                            "filter": {
                              "type": "and",
                              "fields": [
                                {
                                  "type": "in",
                                  "dimension": "intersight.domain.name",
                                  "values": [${DomainName:doublequote}]
                                },
                                {
                                  "type": "search",
                                  "dimension": "host.name",
                                  "query": {
                                    "type": "insensitive_contains",
                                    "value": " FI-B"
                                  }
                                },
                                {
                                    "type": "in",
                                    "dimension": "hw.network.port.role",
                                    "values": [
                                      "eth_uplink_pc"
                                    ]
                                },
                                {
                                  "type": "selector",
                                  "dimension": "instrument.name",
                                  "value": "hw.network"
                                }
                              ]
                            },
                            "aggregations": [
                              {
                                "type": "longSum",
                                "name": "eth_pause",
                                "fieldName": "hw.errors_network_receive_pause"
                              },
                              {
                                "type": "longSum",
                                "name": "fc_pause",
                                "fieldName": "hw.network.packets_receive_ppp"
                              }
                            ]
                          }
                    method: POST
              title: 'A: Receive Ethernet pause frames per FI uplink port (Sum)'
              transformations:
                - id: groupingToMatrix
                  options:
                    columnField: Name
                    rowField: Time
                    valueField: eth_pause
                - id: renameByRegex
                  options:
                    regex: (.*)port-channel(.*)
                    renamePattern: $1$2
              type: timeseries
          title: Fabric Interconnect Ethernet Uplink Port Channels
          type: row
        - collapsed: false
          gridPos:
            h: 1
            w: 24
            x: 0
            "y": 9
          id: 9
          panels: []
          title: Fabric Interconnect Ethernet Uplink Ports
          type: row
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: line
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineStyle:
                        fill: solid
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: none
                    thresholdsStyle:
                        mode: "off"
                mappings: []
                max: 100
                min: 0
                thresholds:
                    mode: percentage
                    steps:
                        - color: green
                        - color: '#EAB839'
                          value: 70
                        - color: red
                          value: 90
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 0
            "y": 10
          id: 34
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: desc
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.Identifier
                  text: Name
                  type: string
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "Identifier",
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        },{
                          "type": "expression",
                          "name": "Identifier",
                          "expression": "concat(domain_name + ' (' + name + ')')",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-A"
                              }
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "eth_uplink"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'A: Transmit Ethernet pause frames per FI uplink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Name
                rowField: Time
                valueField: eth_pause
            - id: renameByRegex
              options:
                regex: (.*)Ethernet(.*)
                renamePattern: $1$2
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: line
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineStyle:
                        fill: solid
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: none
                    thresholdsStyle:
                        mode: "off"
                mappings: []
                max: 100
                min: 0
                thresholds:
                    mode: percentage
                    steps:
                        - color: green
                        - color: '#EAB839'
                          value: 70
                        - color: red
                          value: 90
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 12
            "y": 10
          id: 36
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: desc
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.Identifier
                  text: Name
                  type: string
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "Identifier",
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        },{
                          "type": "expression",
                          "name": "Identifier",
                          "expression": "concat(domain_name + ' (' + name + ')')",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-B"
                              }
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "eth_uplink"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'B: Transmit Ethernet pause frames per FI uplink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Name
                rowField: Time
                valueField: eth_pause
            - id: renameByRegex
              options:
                regex: (.*)Ethernet(.*)
                renamePattern: $1$2
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: line
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineStyle:
                        fill: solid
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: none
                    thresholdsStyle:
                        mode: "off"
                mappings: []
                max: 100
                min: 0
                thresholds:
                    mode: percentage
                    steps:
                        - color: green
                        - color: '#EAB839'
                          value: 70
                        - color: red
                          value: 90
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 0
            "y": 18
          id: 35
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: desc
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.Identifier
                  text: Name
                  type: string
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "Identifier",
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        },{
                          "type": "expression",
                          "name": "Identifier",
                          "expression": "concat(domain_name + ' (' + name + ')')",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-A"
                              }
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "eth_uplink"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'A: Receive Ethernet pause frames per FI uplink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Name
                rowField: Time
                valueField: eth_pause
            - id: renameByRegex
              options:
                regex: (.*)Ethernet(.*)
                renamePattern: $1$2
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: line
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineStyle:
                        fill: solid
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: none
                    thresholdsStyle:
                        mode: "off"
                mappings: []
                max: 100
                min: 0
                thresholds:
                    mode: percentage
                    steps:
                        - color: green
                        - color: '#EAB839'
                          value: 70
                        - color: red
                          value: 90
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 12
            "y": 18
          id: 37
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: desc
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.Identifier
                  text: Name
                  type: string
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "Identifier",
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        },{
                          "type": "expression",
                          "name": "Identifier",
                          "expression": "concat(domain_name + ' (' + name + ')')",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-B"
                              }
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "eth_uplink"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'B: Receive Ethernet pause frames per FI uplink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Name
                rowField: Time
                valueField: eth_pause
            - id: renameByRegex
              options:
                regex: (.*)Ethernet(.*)
                renamePattern: $1$2
          type: timeseries
        - collapsed: false
          gridPos:
            h: 1
            w: 24
            x: 0
            "y": 26
          id: 8
          panels: []
          title: 'Fabric Interconnect Downlink Ports: Fibre Channel congestion'
          type: row
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 0
            "y": 27
          id: 38
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.fc_pause
                  text: fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-A"
                              }
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.network.port.port_channel",
                              "value": "${PC_A}"
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "server"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'A: Transmit FC pause frames per FI downlink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Port
                rowField: Time
                valueField: fc_pause
            - id: renameByRegex
              options:
                regex: '^server # Ethernet(.*)$'
                renamePattern: $1
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 12
            "y": 27
          id: 39
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.fc_pause
                  text: fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-B"
                              }
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.network.port.port_channel",
                              "value": "${PC_B}"
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "server"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'B: Transmit FC pause frames per FI downlink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Port
                rowField: Time
                valueField: fc_pause
            - id: renameByRegex
              options:
                regex: '^server # Ethernet(.*)$'
                renamePattern: $1
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 0
            "y": 35
          id: 40
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.fc_pause
                  text: fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-A"
                              }
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.network.port.port_channel",
                              "value": "${PC_A}"
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "server"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'A: Receive FC pause frames per FI downlink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Port
                rowField: Time
                valueField: fc_pause
            - id: renameByRegex
              options:
                regex: '^server # Ethernet(.*)$'
                renamePattern: $1
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 12
            "y": 35
          id: 41
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.fc_pause
                  text: fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-B"
                              }
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.network.port.port_channel",
                              "value": "${PC_B}"
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "server"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'B: Receive FC pause frames per FI downlink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Port
                rowField: Time
                valueField: fc_pause
            - id: renameByRegex
              options:
                regex: '^server # Ethernet(.*)$'
                renamePattern: $1
          type: timeseries
        - collapsed: false
          gridPos:
            h: 1
            w: 24
            x: 0
            "y": 43
          id: 5
          panels: []
          title: 'Fabric Interconnect Downlink Ports: Ethernet congestion'
          type: row
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 0
            "y": 44
          id: 42
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.fc_pause
                  text: fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-A"
                              }
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.network.port.port_channel",
                              "value": "${PC_A}"
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "server"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'A: Transmit Ethernet pause frames per FI downlink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Port
                rowField: Time
                valueField: eth_pause
            - id: renameByRegex
              options:
                regex: '^server # Ethernet(.*)$'
                renamePattern: $1
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 12
            "y": 44
          id: 44
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.fc_pause
                  text: fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-B"
                              }
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.network.port.port_channel",
                              "value": "${PC_B}"
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "server"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'B: Transmit Ethernet pause frames per FI downlink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Port
                rowField: Time
                valueField: eth_pause
            - id: renameByRegex
              options:
                regex: '^server # Ethernet(.*)$'
                renamePattern: $1
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 0
            "y": 52
          id: 43
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.fc_pause
                  text: fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-A"
                              }
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.network.port.port_channel",
                              "value": "${PC_A}"
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "server"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'A: Receive Ethernet pause frames per FI downlink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Port
                rowField: Time
                valueField: eth_pause
            - id: renameByRegex
              options:
                regex: '^server # Ethernet(.*)$'
                renamePattern: $1
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides: []
          gridPos:
            h: 8
            w: 12
            x: 12
            "y": 52
          id: 45
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.eth_pause
                  text: eth_pause
                  type: number
                - selector: event.fc_pause
                  text: fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-B"
                              }
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.network.port.port_channel",
                              "value": "${PC_B}"
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "server"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'B: Receive Ethernet pause frames per FI downlink port (Sum)'
          transformations:
            - id: groupingToMatrix
              options:
                columnField: Port
                rowField: Time
                valueField: eth_pause
            - id: renameByRegex
              options:
                regex: '^server # Ethernet(.*)$'
                renamePattern: $1
          type: timeseries
        - collapsed: false
          gridPos:
            h: 1
            w: 24
            x: 0
            "y": 60
          id: 7
          panels: []
          title: 'IFM Downlink Ports: Fibre Channel congestion'
          type: row
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides:
                - matcher:
                    id: byName
                    options: RX
                  properties:
                    - id: color
                      value:
                        fixedColor: dark-purple
                        mode: fixed
                - matcher:
                    id: byName
                    options: TX
                  properties:
                    - id: color
                      value:
                        fixedColor: blue
                        mode: fixed
          gridPos:
            h: 8
            w: 12
            x: 0
            "y": 61
          id: 46
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          repeat: HIFPorts_A
          repeatDirection: v
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.tx_eth_pause
                  text: tx_eth_pause
                  type: number
                - selector: event.rx_eth_pause
                  text: rx_eth_pause
                  type: number
                - selector: event.tx_fc_pause
                  text: tx_fc_pause
                  type: number
                - selector: event.rx_fc_pause
                  text: rx_fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-A"
                              }
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "host_port"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.chassis.number",
                              "value": "${ChassisId}"
                            },
                            {
                              "type": "selector",
                              "dimension": "id",
                              "value": "/api/v1/ether/HostPorts/${HIFPorts_A:value}"
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "tx_eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "rx_eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "tx_fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          },
                          {
                            "type": "longSum",
                            "name": "rx_fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'A: FC Pause frames per IFM downlink port (Sum) ${ChassisId}/${HIFPorts_A:text}'
          transformations:
            - id: organize
              options:
                excludeByName:
                    rx_eth_pause: true
                    rx_fc_pause: false
                    tx_eth_pause: true
                    tx_fc_pause: false
                includeByName: {}
                indexByName: {}
                renameByName:
                    rx_eth_pause: ""
                    rx_fc_pause: RX
                    tx_eth_pause: ""
                    tx_fc_pause: TX
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides:
                - matcher:
                    id: byName
                    options: RX
                  properties:
                    - id: color
                      value:
                        fixedColor: dark-purple
                        mode: fixed
                - matcher:
                    id: byName
                    options: TX
                  properties:
                    - id: color
                      value:
                        fixedColor: blue
                        mode: fixed
          gridPos:
            h: 8
            w: 12
            x: 12
            "y": 61
          id: 47
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          repeat: HIFPorts_B
          repeatDirection: v
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.tx_eth_pause
                  text: tx_eth_pause
                  type: number
                - selector: event.rx_eth_pause
                  text: rx_eth_pause
                  type: number
                - selector: event.tx_fc_pause
                  text: tx_fc_pause
                  type: number
                - selector: event.rx_fc_pause
                  text: rx_fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-B"
                              }
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "host_port"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.chassis.number",
                              "value": "${ChassisId}"
                            },
                            {
                              "type": "selector",
                              "dimension": "id",
                              "value": "/api/v1/ether/HostPorts/${HIFPorts_B:value}"
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "tx_eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "rx_eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "tx_fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          },
                          {
                            "type": "longSum",
                            "name": "rx_fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'B: FC pause frames per IFM downlink port (Sum) ${ChassisId}/${HIFPorts_B:text}'
          transformations:
            - id: organize
              options:
                excludeByName:
                    rx_eth_pause: true
                    rx_fc_pause: false
                    tx_eth_pause: true
                    tx_fc_pause: false
                includeByName: {}
                indexByName: {}
                renameByName:
                    rx_eth_pause: ""
                    rx_fc_pause: RX
                    tx_eth_pause: ""
                    tx_fc_pause: TX
          type: timeseries
        - collapsed: false
          gridPos:
            h: 1
            w: 24
            x: 0
            "y": 77
          id: 6
          panels: []
          title: 'IFM Downlink Ports: Ethernet congestion'
          type: row
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides:
                - matcher:
                    id: byName
                    options: RX
                  properties:
                    - id: color
                      value:
                        fixedColor: dark-purple
                        mode: fixed
                - matcher:
                    id: byName
                    options: TX
                  properties:
                    - id: color
                      value:
                        fixedColor: blue
                        mode: fixed
          gridPos:
            h: 8
            w: 12
            x: 0
            "y": 78
          id: 48
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          repeat: HIFPorts_A
          repeatDirection: v
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.tx_eth_pause
                  text: tx_eth_pause
                  type: number
                - selector: event.rx_eth_pause
                  text: rx_eth_pause
                  type: number
                - selector: event.tx_fc_pause
                  text: tx_fc_pause
                  type: number
                - selector: event.rx_fc_pause
                  text: rx_fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-A"
                              }
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "host_port"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.chassis.number",
                              "value": "${ChassisId}"
                            },
                            {
                              "type": "selector",
                              "dimension": "id",
                              "value": "/api/v1/ether/HostPorts/${HIFPorts_A:value}"
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "tx_eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "rx_eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "tx_fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          },
                          {
                            "type": "longSum",
                            "name": "rx_fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'A: Ethernet Pause frames per IFM downlink port (Sum) ${ChassisId}/${HIFPorts_A:text}'
          transformations:
            - id: organize
              options:
                excludeByName:
                    rx_eth_pause: false
                    rx_fc_pause: true
                    tx_eth_pause: false
                    tx_fc_pause: true
                includeByName: {}
                indexByName: {}
                renameByName:
                    rx_eth_pause: RX
                    rx_fc_pause: ""
                    tx_eth_pause: TX
                    tx_fc_pause: ""
          type: timeseries
        - datasource:
            type: yesoreyeram-infinity-datasource
            uid: ${DataSource}
          fieldConfig:
            defaults:
                color:
                    mode: palette-classic
                custom:
                    axisBorderShow: false
                    axisCenteredZero: false
                    axisColorMode: text
                    axisLabel: ""
                    axisPlacement: auto
                    barAlignment: 0
                    barWidthFactor: 0.6
                    drawStyle: bars
                    fillOpacity: 0
                    gradientMode: none
                    hideFrom:
                        legend: false
                        tooltip: false
                        viz: false
                    insertNulls: false
                    lineInterpolation: linear
                    lineWidth: 1
                    pointSize: 5
                    scaleDistribution:
                        type: linear
                    showPoints: auto
                    spanNulls: false
                    stacking:
                        group: A
                        mode: normal
                    thresholdsStyle:
                        mode: "off"
                fieldMinMax: true
                mappings: []
                thresholds:
                    mode: percentage
                    steps:
                        - color: blue
            overrides:
                - matcher:
                    id: byName
                    options: RX
                  properties:
                    - id: color
                      value:
                        fixedColor: dark-purple
                        mode: fixed
                - matcher:
                    id: byName
                    options: TX
                  properties:
                    - id: color
                      value:
                        fixedColor: blue
                        mode: fixed
          gridPos:
            h: 8
            w: 12
            x: 12
            "y": 78
          id: 49
          options:
            legend:
                calcs: []
                displayMode: list
                placement: bottom
                showLegend: true
            tooltip:
                hideZeros: false
                mode: multi
                sort: none
          pluginVersion: 12.0.0
          repeat: HIFPorts_B
          repeatDirection: v
          targets:
            - columns:
                - selector: timestamp
                  text: Time
                  type: timestamp
                - selector: event.port_spec
                  text: Port
                  type: string
                - selector: event.tx_eth_pause
                  text: tx_eth_pause
                  type: number
                - selector: event.rx_eth_pause
                  text: rx_eth_pause
                  type: number
                - selector: event.tx_fc_pause
                  text: tx_fc_pause
                  type: number
                - selector: event.rx_fc_pause
                  text: rx_fc_pause
                  type: number
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              filters: []
              format: table
              global_query_id: ""
              parser: backend
              refId: A
              root_selector: ""
              source: url
              type: json
              uql: |-
                parse-json
                | project "Timestamp"=todatetime("timestamp"), "event"
              url: /api/v1/telemetry/TimeSeries
              url_options:
                body_content_type: application/json
                body_type: raw
                data: |4-
                      {
                        "queryType": "groupBy",
                        "dataSource": "NetworkInterfaces",
                        "granularity": {
                           "type": "duration",
                           "duration": $__interval_ms,
                           "timeZone": "$__timezone"
                        },
                        "intervals": ["${__from:date}/${__to:date}"],
                        "dimensions": [
                          "domain_name",
                          "host_name",
                          "chassis_number",
                          "port_role",
                          "name",
                          "port_spec"
                        ],
                        "virtualColumns": [{
                          "type": "nested-field",
                          "columnName": "intersight.domain.name",
                          "outputName": "domain_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "host.name",
                          "outputName": "host_name",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.chassis.number",
                          "outputName": "chassis_number",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "nested-field",
                          "columnName": "hw.network.port.role",
                          "outputName": "port_role",
                          "expectedType": "STRING",
                          "path": "$"
                        },{
                          "type": "expression",
                          "name": "port_spec",
                          "expression": "concat(port_role + ' # ' + name)",
                          "outputType": "STRING"
                        }],
                        "filter": {
                          "type": "and",
                          "fields": [
                            {
                              "type": "in",
                              "dimension": "intersight.domain.name",
                              "values": [${DomainName:doublequote}]
                            },
                            {
                              "type": "search",
                              "dimension": "host.name",
                              "query": {
                                "type": "insensitive_contains",
                                "value": " FI-B"
                              }
                            },
                            {
                                "type": "in",
                                "dimension": "hw.network.port.role",
                                "values": [
                                  "host_port"
                                ]
                            },
                            {
                              "type": "selector",
                              "dimension": "hw.chassis.number",
                              "value": "${ChassisId}"
                            },
                            {
                              "type": "selector",
                              "dimension": "id",
                              "value": "/api/v1/ether/HostPorts/${HIFPorts_B:value}"
                            },
                            {
                              "type": "selector",
                              "dimension": "instrument.name",
                              "value": "hw.network"
                            }
                          ]
                        },
                        "aggregations": [
                          {
                            "type": "longSum",
                            "name": "tx_eth_pause",
                            "fieldName": "hw.errors_network_transmit_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "rx_eth_pause",
                            "fieldName": "hw.errors_network_receive_pause"
                          },
                          {
                            "type": "longSum",
                            "name": "tx_fc_pause",
                            "fieldName": "hw.network.packets_transmit_ppp"
                          },
                          {
                            "type": "longSum",
                            "name": "rx_fc_pause",
                            "fieldName": "hw.network.packets_receive_ppp"
                          }
                        ]
                      }
                method: POST
          title: 'B: FC pause frames per IFM downlink port (Sum) ${ChassisId}/${HIFPorts_B:text}'
          transformations:
            - id: organize
              options:
                excludeByName:
                    rx_eth_pause: false
                    rx_fc_pause: true
                    tx_eth_pause: false
                    tx_fc_pause: true
                includeByName: {}
                indexByName: {}
                renameByName:
                    rx_eth_pause: RX
                    rx_fc_pause: ""
                    tx_eth_pause: TX
                    tx_fc_pause: ""
          type: timeseries
    preload: false
    schemaVersion: 41
    tags: []
    templating:
        list:
            - current:
                text: ""
                value: ""
              label: Data Source
              name: DataSource
              options: []
              query: yesoreyeram-infinity-datasource
              refresh: 1
              regex: ""
              type: datasource
            - current:
                text: sgaree-sj2-151-b18-6536-1
                value: sgaree-sj2-151-b18-6536-1
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              label: Domain
              name: DomainName
              options: []
              query:
                infinityQuery:
                    columns: []
                    filters: []
                    format: table
                    parser: uql
                    refId: variable
                    root_selector: ""
                    source: url
                    type: json
                    uql: |-
                        parse-json
                        | scope "Results"
                        | project "Name"
                    url: /api/v1/network/ElementSummaries?$filter=ManagementMode eq 'Intersight'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: (.*) FI-A
              sort: 7
              type: query
            - current:
                text: tme-esx-1
                value: tme-esx-1
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              label: Server Profile
              name: ServerProfileName
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: ServerProfile.Name
                          text: Name
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/view/Servers?$filter=ManagementMode eq 'Intersight' and ServerProfile ne null and ClassId eq 'compute.Blade' and contains(Name, '${DomainName}')
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              sort: 7
              type: query
            - current:
                text: 6425e7a277696e32018d5418
                value: 6425e7a277696e32018d5418
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: ServerProfileMoid
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Moid
                          text: Moid
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/server/Profiles?$filter=Name eq '${ServerProfileName}'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: 67bf574361767535013560db
                value: 67bf574361767535013560db
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: ServerMoid
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: AssignedServer.Moid
                          text: Moid
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: ""
                    source: url
                    type: json
                    url: /api/v1/server/Profiles/${ServerProfileMoid}
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: sgaree-sj2-151-b18-6536-1-3
                value: 67bf569b6176753501349fa3
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: ChassisName
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: EquipmentChassis.Moid
                          text: __value
                          type: string
                        - selector: EquipmentChassis.Name
                          text: __text
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: ""
                    source: url
                    type: json
                    url: /api/v1/compute/Blades/${ServerMoid}?$expand=EquipmentChassis
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: "3"
                value: "3"
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: ChassisId
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: ChassisId
                          text: ChassisId
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/equipment/Chasses?$filter=Moid eq '${ChassisName:value}'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: ""
                value: ""
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: ChassisProfileMoid
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Moid
                          text: Moid
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/chassis/Profiles?$filter=AssignedChassis.Moid eq '${ChassisName:value}'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: FDO272406FG
                value: FDO272406FG
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: FIASerial
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Serial
                          text: Serial
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/network/ElementSummaries?$filter=Name eq '${DomainName} FI-A'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: FDO272406ES
                value: FDO272406ES
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: FIBSerial
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Serial
                          text: Serial
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/network/ElementSummaries?$filter=Name eq '${DomainName} FI-B'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: ""
                value: ""
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: DomainProfileMoid
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Moid
                          text: Moid
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/fabric/SwitchClusterProfiles?$filter=Name eq '${DomainName}'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              label: vNICs
              name: HostEthInterfaces
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Name
                          text: __text
                          type: string
                        - selector: Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/adapter/HostEthInterfaces?$filter=Ancestors.Moid eq '${ServerMoid}'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              label: vHBAs
              name: HostFcInterfaces
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Name
                          text: __text
                          type: string
                        - selector: Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/adapter/HostFcInterfaces?$filter=Ancestors.Moid eq '${ServerMoid}'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: "1333"
                value: "1333"
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: HIF_PC_A
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Vethernet.BoundInterface.PortChannelId
                          text: __value
                          type: string
                        - selector: Vethernet.BoundInterface.SwitchId
                          text: fabric
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/adapter/HostEthInterfaces?$filter=Ancestors.Moid eq '${ServerMoid}'&$select=Vethernet,Ancestors&$expand=Vethernet($select=BoundInterface%3B$expand=BoundInterface($select=PortChannelId,SwitchId))
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: "1333"
                value: "1333"
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: HIF_PC_B
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Vethernet.BoundInterface.PortChannelId
                          text: __value
                          type: string
                        - selector: Vethernet.BoundInterface.SwitchId
                          text: fabric
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/adapter/HostEthInterfaces?$filter=Ancestors.Moid eq '${ServerMoid}'&$select=Vethernet,Ancestors&$expand=Vethernet($select=BoundInterface%3B$expand=BoundInterface($select=PortChannelId,SwitchId))
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              name: HIFPorts_A
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: PortId
                          text: __text
                          type: string
                        - selector: Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/ether/HostPorts?$filter=Ancestors.Moid eq '${ChassisName:value}' and SwitchId eq 'A' and PortChannelId eq ${HIF_PC_A} and AcknowledgedPeerInterface ne null
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              sort: 7
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              name: HIFPorts_B
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: PortId
                          text: __text
                          type: string
                        - selector: Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/ether/HostPorts?$filter=Ancestors.Moid eq '${ChassisName:value}' and SwitchId eq 'B' and PortChannelId eq ${HIF_PC_B} and AcknowledgedPeerInterface ne null
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              sort: 7
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              name: NIFPorts_A
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: PortId
                          text: __text
                          type: string
                        - selector: Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/ether/NetworkPorts?$filter=Ancestors.Moid eq '${ChassisName:value}' and SwitchId eq 'A'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              sort: 3
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              name: NIFPorts_B
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: PortId
                          text: __text
                          type: string
                        - selector: Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/ether/NetworkPorts?$filter=Ancestors.Moid eq '${ChassisName:value}' and SwitchId eq 'B'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              sort: 3
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              name: ServerPorts_A
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: PeerInterface.PortId
                          text: __text
                          type: string
                        - selector: PeerInterface.Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/ether/NetworkPorts?$filter=Ancestors.Moid eq '${ChassisName:value}' and SwitchId eq 'A'&$expand=PeerInterface($select=PortId)
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              sort: 3
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              name: ServerPorts_B
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: PeerInterface.PortId
                          text: __text
                          type: string
                        - selector: PeerInterface.Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/ether/NetworkPorts?$filter=Ancestors.Moid eq '${ChassisName:value}' and SwitchId eq 'B'&$expand=PeerInterface($select=PortId)
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              sort: 3
              type: query
            - current:
                text: All
                value: $__all
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              includeAll: true
              name: PinnedEthUplinkA
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Vethernet.PinnedInterface.ClassId
                          text: ClassId
                          type: string
                        - selector: Vethernet.PinnedInterface.Moid
                          text: Moid
                          type: string
                    computed_columns:
                        - selector: ClassId + 's/' + Moid
                          text: __value
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/adapter/HostEthInterfaces?$select=Vethernet&$filter=Ancestors.Moid eq '${ServerMoid}'&$expand=Vethernet($expand=PinnedInterface)
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: /ether.(?<value>.*)/
              sort: 3
              type: query
            - current:
                text: 654bd2556176753501775211
                value: 654bd2556176753501775211
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: FIAMoid
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Moid
                          text: Moid
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/network/ElementSummaries?$filter=Name eq '${DomainName} FI-A'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: 654bd25561767535017751ce
                value: 654bd25561767535017751ce
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: FIBMoid
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: Moid
                          text: Moid
                          type: string
                    filters: []
                    format: table
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/network/ElementSummaries?$filter=Name eq '${DomainName} FI-B'
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: "1025"
                value: "1025"
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: PC_A
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: AcknowledgedPeerInterface.PortChannelId
                          text: __text
                          type: string
                        - selector: AcknowledgedPeerInterface.Ancestors.2.Moid
                          text: FI
                          type: string
                    filterExpression: FI == '${FIAMoid}'
                    filters: []
                    format: table
                    pagination_mode: none
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/ether/NetworkPorts?$filter=Ancestors.Moid eq '${ChassisName:value}'&$select=AcknowledgedPeerInterface, PortChannelId&$expand=AcknowledgedPeerInterface
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
            - current:
                text: "1153"
                value: "1153"
              datasource:
                type: yesoreyeram-infinity-datasource
                uid: ${DataSource}
              definition: ""
              hide: 2
              name: PC_B
              options: []
              query:
                infinityQuery:
                    columns:
                        - selector: AcknowledgedPeerInterface.PortChannelId
                          text: __text
                          type: string
                        - selector: AcknowledgedPeerInterface.Ancestors.2.Moid
                          text: FI
                          type: string
                    filterExpression: FI == '${FIBMoid}'
                    filters: []
                    format: table
                    pagination_mode: none
                    parser: backend
                    refId: variable
                    root_selector: $.Results
                    source: url
                    type: json
                    url: /api/v1/ether/NetworkPorts?$filter=Ancestors.Moid eq '${ChassisName:value}'&$select=AcknowledgedPeerInterface, PortChannelId&$expand=AcknowledgedPeerInterface
                    url_options:
                        data: ""
                        method: GET
                query: ""
                queryType: infinity
              refresh: 1
              regex: ""
              type: query
    time:
        from: now-6h
        to: now
    timepicker: {}
    timezone: browser
    title: 'Server Traffic Verification: Congestion'
    uid: is_domain_net_server_congestion
